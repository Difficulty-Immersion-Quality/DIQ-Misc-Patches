// ==================================== Wifi Potions - Add "data "DefaultBoosts" "Tag(NOSORT)"" for exclusion from Simple Sorting Containers ====================================

new entry "FallenStar_Wifi_Healing_Potion_Small"
type "Object"
using "FallenStar_Wifi_Healing_Potion_Small"
// data "DefaultBoosts" "CriticalHit(AttackTarget,Failure,Never);CriticalHit(AttackTarget,Success,Never)"
data "DefaultBoosts" "CriticalHit(AttackTarget,Failure,Never);CriticalHit(AttackTarget,Success,Never);Tag(NOSORT)"

new entry "FallenStar_Wifi_Healing_Potion_Greater"
type "Object"
using "FallenStar_Wifi_Healing_Potion_Greater"
// data "DefaultBoosts" "CriticalHit(AttackTarget,Failure,Never);CriticalHit(AttackTarget,Success,Never)"
data "DefaultBoosts" "CriticalHit(AttackTarget,Failure,Never);CriticalHit(AttackTarget,Success,Never);Tag(NOSORT)"

new entry "FallenStar_Wifi_Healing_Potion_Superior"
type "Object"
using "FallenStar_Wifi_Healing_Potion_Superior"
// data "DefaultBoosts" "CriticalHit(AttackTarget,Failure,Never);CriticalHit(AttackTarget,Success,Never)"
data "DefaultBoosts" "CriticalHit(AttackTarget,Failure,Never);CriticalHit(AttackTarget,Success,Never);Tag(NOSORT)"

new entry "FallenStar_Wifi_Healing_Potion_Supreme"
type "Object"
using "FallenStar_Wifi_Healing_Potion_Supreme"
// data "DefaultBoosts" "CriticalHit(AttackTarget,Failure,Never);CriticalHit(AttackTarget,Success,Never)"
data "DefaultBoosts" "CriticalHit(AttackTarget,Failure,Never);CriticalHit(AttackTarget,Success,Never);Tag(NOSORT)"

// ==================================== Necromancy of Thay - Remove "Attribute(InventoryBound)" - Also removed "data "DefaultBoosts" "Tag(NOSORT)"" for inclusion with Simple Sorting Containers ====================================

new entry "FOR_DANGEROUSBOOK_BOUNDTO"
type "StatusData"
data "StatusType" "BOOST"
using "FOR_DANGEROUSBOOK_BOUNDTO"
// data "Boosts" "Attribute(InventoryBound)"
data "Boosts" ""
// "DefaultBoosts" "Tag(NOSORT)" - Simple Sorting Bags
data "DefaultBoosts" ""

// ==================================== HeavyArmorMoveSpeed_SE - Add tooltip visibility for player clarity ====================================

new entry "IsWearingHeavyArmor_13"
type "PassiveData"
using "IsWearingHeavyArmor_13"
data "Properties" "Highlighted"
data "DisplayName" "hdb671db5gc473g4c5cgbc20gb33849e43a36"
data "Description" "hfe823e2cgda3eg474eg81b9gbcb416d33d1e"
data "DescriptionParams" "Distance(3);4"

// ==================================== Mobility Overhaul - Reduce duration of the Off Balanced condition from jumping ====================================

new entry "MO_Jump_Off_Balanced_Self"
type "SpellData"
using "MO_Jump_Off_Balanced_Self"
// data "SpellSuccess" "ApplyStatus(SELF, OFF_BALANCED,100,2)"
data "SpellSuccess" "ApplyStatus(SELF, OFF_BALANCED,100,1)"

// ==================================== Ensnaring Strike missing from Damage Combos ====================================

new entry "ENSNARING_STRIKE"
type "StatusData"
data "StatusType" "BOOST"
using "ENSNARING_STRIKE"
data "Description" "ha6582f71g1442g4acagbbebg726e31d01acd"
data "Boosts" "Advantage(AttackTarget);Disadvantage(AttackRoll);ActionResourceBlock(Movement);Disadvantage(SavingThrow,Dexterity);Attribute(Grounded);Resistance(Fire, Vulnerable)"

// ==================================== Animate Dead Plus Plus & Automated Summons - Make all the toggles pop up together for consistency and less people asking how to get their Automate Summons back "I only have Undead Automation" etc. ====================================

new entry "SHORT_REST"
type "StatusData"
data "StatusType" "BOOST"
using "SHORT_REST"
data "OnApplyFunctors" "IF(Player() and Tagged('PLAYABLE') and Tagged('AVATAR') and not Tagged('SUMMON') and not Summon() and not HasStatus('SAILORCAT_ADPP_PASSIVES')):ApplyStatus(SAILORCAT_ADPP_PASSIVES,100,-1);IF(Player() and Tagged('PLAYABLE') and not Tagged('SUMMON') and not Summon() and not HasStatus('SAILORCAT_ADPP_PASSIVES_AUX')):ApplyStatus(SAILORCAT_ADPP_PASSIVES_AUX,100,-1);IF(Player() and Tagged('PLAYABLE') and Tagged('AVATAR') and not Tagged('SUMMON') and not Summon() and not HasStatus('SAILORCAT_AUTOMATED_SUMMONS_PASSIVES')):ApplyStatus(SAILORCAT_AUTOMATED_SUMMONS_PASSIVES,100,-1)"
data "OnRemoveFunctors" "IF(Player() and Tagged('PLAYABLE') and Tagged('AVATAR') and not Tagged('SUMMON') and not Summon() and not HasStatus('SAILORCAT_ADPP_PASSIVES')):ApplyStatus(SAILORCAT_ADPP_PASSIVES,100,-1);IF(Player() and Tagged('PLAYABLE') and not Tagged('SUMMON') and not Summon() and not HasStatus('SAILORCAT_ADPP_PASSIVES_AUX')):ApplyStatus(SAILORCAT_ADPP_PASSIVES_AUX,100,-1);IF(Player() and Tagged('PLAYABLE') and Tagged('AVATAR') and not Tagged('SUMMON') and not Summon() and not HasStatus('SAILORCAT_AUTOMATED_SUMMONS_PASSIVES')):ApplyStatus(SAILORCAT_AUTOMATED_SUMMONS_PASSIVES,100,-1)"

new entry "NON_LETHAL"
type "StatusData"
data "StatusType" "BOOST"
using "NON_LETHAL"
data "OnApplyFunctors" "IF(Player() and Tagged('PLAYABLE') and Tagged('AVATAR') and not Tagged('SUMMON') and not Summon() and not HasStatus('SAILORCAT_ADPP_PASSIVES')):ApplyStatus(SAILORCAT_ADPP_PASSIVES,100,-1);IF(Player() and Tagged('PLAYABLE') and not Tagged('SUMMON') and not Summon() and not HasStatus('SAILORCAT_ADPP_PASSIVES_AUX')):ApplyStatus(SAILORCAT_ADPP_PASSIVES_AUX,100,-1);IF(Player() and Tagged('PLAYABLE') and Tagged('AVATAR') and not Tagged('SUMMON') and not Summon() and not HasStatus('SAILORCAT_AUTOMATED_SUMMONS_PASSIVES')):ApplyStatus(SAILORCAT_AUTOMATED_SUMMONS_PASSIVES,100,-1)"
data "OnRemoveFunctors" "IF(Player() and Tagged('PLAYABLE') and Tagged('AVATAR') and not Tagged('SUMMON') and not Summon() and not HasStatus('SAILORCAT_ADPP_PASSIVES')):ApplyStatus(SAILORCAT_ADPP_PASSIVES,100,-1);IF(Player() and Tagged('PLAYABLE') and not Tagged('SUMMON') and not Summon() and not HasStatus('SAILORCAT_ADPP_PASSIVES_AUX')):ApplyStatus(SAILORCAT_ADPP_PASSIVES_AUX,100,-1);IF(Player() and Tagged('PLAYABLE') and Tagged('AVATAR') and not Tagged('SUMMON') and not Summon() and not HasStatus('SAILORCAT_AUTOMATED_SUMMONS_PASSIVES')):ApplyStatus(SAILORCAT_AUTOMATED_SUMMONS_PASSIVES,100,-1)"

// ==================================== Dark Urge Rebirth - Add missing DescriptionParams, increase Save DC, and add some sweat and blood splatter for flavour. ====================================

new entry "DARK_ENDURANCE_DOWNED"
type "StatusData"
data "StatusType" "DOWNED"
using "DARK_ENDURANCE_DOWNED"
data "Description" "h6c370b06g022bg4c7bg959cgfbd1c26cbb3b"
data "DescriptionParams" "RegainHitPoints(3d4)"
data "OnApplyFunctors" "RemoveStatus(DARK_ENDURANCE);RegainHitPoints(3d4);IF(not SavingThrow(Ability.Wisdom,15)):ApplyStatus(DARK_POSSESSION,100,2)"
data "SplatterBloodAmount" "1.0"

new entry "DARK_POSSESSION"
type "StatusData"
data "StatusType" "BOOST"
using "DARK_POSSESSION"
data "SplatterSweatAmount" "1"

// ==================================== Make Spiritual Weapon summons not slow as shit ====================================
// All other summons inherit from Greataxe

new entry "SpiritualWeapon_Greataxe"
type "Character"
using "SpiritualWeapon_Greataxe"
data "ActionResources" "BonusActionPoint:1;Movement:9"

// ==================================== Carry capacity changes ====================================
// Commented out, gonna leave it vanilla and see if other systems can actually make it interesting

// key "EncumberedMultiplier","35"

// key "HeavilyEncumberedMultiplier","45"

// key "CarryLimitMultiplier","50"

// ==================================== Block pickpocketing for Volo and Withers ====================================

new entry "GLO_Volo"
type "Character"
using "GLO_Volo"
// data "DefaultBoosts" "BlockRegainHP(Undead;Construct)"
data "DefaultBoosts" "BlockRegainHP(Undead;Construct);Tag(BLOCK_PICKPOCKET)"

new entry "GLO_Jergal"
type "Character"
using "GLO_Jergal"
// data "DefaultBoosts" "ProficiencyBonus(SavingThrow, Wisdom); BlockRegainHP(Living;Construct)"
data "DefaultBoosts" "ProficiencyBonus(SavingThrow, Wisdom);BlockRegainHP(Living;Construct);Tag(BLOCK_PICKPOCKET)"

// ==================================== Allow sneak attack outside of combat (without hiding) for Rogue Extra's Swashbuckler subclass, remove movement block from Steady Aim and replace it with more forgiving mechanics and description ====================================

new entry "RAKISHAUDACITY"
using "RAKISHAUDACITY"
type "StatusData"
data "StatusType" "BOOST"
data "AuraStatuses" "TARGET:IF(Character()):ApplyStatus(SNEAK_ENEMY,100,1)"

// Steady Aim rework
new entry "Shout_SteadyAim"
type "SpellData"
data "SpellType" "Shout"
using "Shout_SteadyAim"
data "Description" "hc0bc6718g548bg49a0ga4a4g27c238a87c66"
data "SpellProperties" "ApplyStatus(STEADYAIM,100,1);ApplyStatus(GOON_STEADYAIM_LOSE_MOVEMENT,100,1)"

new entry "STEADYAIM"
type "StatusData"
data "StatusType" "BOOST"
using "STEADYAIM"
data "Description" "h50ffdbf5ga58cg4e8bg9c47g9a2e50dffeda"

new entry "Steady_AimActive"
type "PassiveData"
using "Steady_AimActive"
data "StatsFunctorContext" "OnAttack;OnMovedDistance" 